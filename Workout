import os
import json
import sys
import gspread
from google.oauth2.service_account import Credentials
from google.auth.transport.requests import Request
from colorama import Fore, Style, init
from datetime import datetime

# Initialize colorama
init(autoreset=True)

# --- Google Sheets Setup --- #
SCOPE = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]

try:
    # Load credentials from environment variable (used on Heroku)
    creds_dict = json.loads(os.environ["CREDS_JSON"])
    CREDS = Credentials.from_service_account_info(creds_dict)
    SCOPED_CREDS = CREDS.with_scopes(SCOPE)
    GSPREAD_CLIENT = gspread.authorize(SCOPED_CREDS)
    SHEET = GSPREAD_CLIENT.open_by_key("1sUgs6mm_g2wbyyLuSQjLvFOVHe_XpYVGGucRCXgzZWc")
    worksheet = SHEET.worksheet("Sheet1")
except Exception as e:
    print(Fore.RED + f"\nError connecting to Google Sheet: {e}")
    sys.exit(1)

# --- Safety Questions --- #
def run_safety_check():
    print(Fore.CYAN + "\n=== Safety Check Before Workout ===")
    questions = [
        "Do you have a heart condition?",
        "Do you feel pain in your chest during physical activity?",
        "Are you currently pregnant?",
        "Do you have any joint or bone problems?",
        "Do you experience dizziness or loss of balance?"
    ]
    for question in questions:
        while True:
            answer = input(f"{question} (Yes/No): ").strip().lower()
            if answer in ["yes", "no"]:
                print(Fore.GREEN + "Thank you for your answer.")
                break
            else:
                print(Fore.RED + "Invalid input. Please answer Yes or No.")

# --- Add a Workout Entry --- #
def add_workout():
    print(Fore.CYAN + "\n=== Log Your Workout ===")
    exercise = input("What exercise did you do? ").strip().title()

    while True:
        try:
            duration = int(input("How many minutes did you exercise? ").strip())
            break
        except ValueError:
            print(Fore.RED + "Please enter a valid number of minutes.")

    while True:
        intensity = input("What was the intensity? (Low / Medium / High): ").strip().capitalize()
        if intensity in ["Low", "Medium", "High"]:
            break
        else:
            print(Fore.RED + "Please enter Low, Medium, or High.")

    date = datetime.now().strftime("%d/%m/%Y")

    try:
        worksheet.append_row([date, exercise, duration, intensity])
        print(Fore.GREEN + "Workout logged successfully!\n")
    except Exception as e:
        print(Fore.RED + f"Failed to log workout: {e}")

# --- View Logged Workouts --- #
def view_workouts():
    print(Fore.CYAN + "\n=== Your Logged Workouts ===")
    try:
        records = worksheet.get_all_values()
        if len(records) <= 1:
            print("No workouts logged yet.")
            return
        for row in records[1:]:  # Skip header
            print(f"Date: {row[0]} | Exercise: {row[1]} | Duration: {row[2]} mins | Intensity: {row[3]}")
    except Exception as e:
        print(Fore.RED + f"Error reading sheet: {e}")

# --- Summary Function (get_stock_values equivalent) --- #
def get_stock_values():
    """
    Creates a summary dictionary of exercises logged and prints it.
    Keys = Exercise names, Values = Total minutes logged.
    """
    print(Fore.CYAN + "\n=== Exercise Summary ===")
    try:
        records = worksheet.get_all_values()
        if len(records) <= 1:
            print("No data available yet.")
            return

        summary = {}
        for row in records[1:]:  # Skip header
            exercise = row[1]
            try:
                minutes = int(row[2])
                summary[exercise] = summary.get(exercise, 0) + minutes
            except ValueError:
                continue  # Skip invalid rows

        print("\nSummary of total minutes per exercise:\n")
        for ex, mins in summary.items():
            print(f"- {ex}: {mins} mins")
    except Exception as e:
        print(Fore.RED + f"Error reading summary: {e}")

# --- Main Menu --- #
def main():
    print(Fore.YELLOW + "Welcome to Workout Logger! ðŸ’ª")
    run_safety_check()

    while True:
        print("\nWhat would you like to do?")
        print("1. Add a new workout")
        print("2. View all logged workouts")
        print("3. View exercise summary")
        print("4. Exit")

        choice = input("Enter your choice (1/2/3/4): ").strip()

        if choice == "1":
            add_workout()
        elif choice == "2":
            view_workouts()
        elif choice == "3":
            get_stock_values()
        elif choice == "4":
            print(Fore.MAGENTA + "Goodbye! Stay strong! ðŸ’™")
            break
        else:
            print(Fore.RED + "Invalid choice. Please select 1, 2, 3 or 4.")

if __name__ == "__main__":
    main()
